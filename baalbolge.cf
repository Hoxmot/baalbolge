Exps. Exps ::= Exp Exps

EInt.  Exp ::= Integer
EBool. Exp ::= "True" | "False"
EFunc. Exp ::= FuncCall
EList. Exp ::= "[" Exps "]"
EVar.  Exp ::= Var
EUnit. Exp ::= "()"

FCFuncCall. FuncCall ::= "(" FuncVar Exps ")"
FCVarDecl.  FuncCall ::= "(" Type Exp ")"
FCInternal. FuncCall ::= "(" InternalFunc ")"


IFuncDecl. InternalFunc ::= "(defn" FuncVar "[" ArgsList "]" Exps ")"
IWhile.    InternalFunc ::= "(while" Exp Exp ")"
IIf.       InternalFunc ::= "(if" Exp Exp Exp ")"
IAdd.      InternalFunc ::= "(+" Exp Exp ")"
ISub.      InternalFunc ::= "(-" Exp Exp ")"
IDiv.      InternalFunc ::= "(/" Exp Exp ")"
IMul.      InternalFunc ::= "(*" Exp Exp ")"
IMod.      InternalFunc ::= "(%" Exp Exp ")"
IAnd.      InternalFunc ::= "(and" Exp Exp ")"
IOr.       InternalFunc ::= "(or" Exp Exp ")"

ArgsList ::= Arg ArgsList

Arg ::= "(" Type Var ")"

TInt.  Type ::= "int"
TBool. Type ::= "bool"
TVar.  Type ::= "var"
TList. Type ::= "[" Type "]"
TUnit. Type ::= "_"
